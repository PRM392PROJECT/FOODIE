@await Html.PartialAsync("_Header_Customer")

<style>
    .profile-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 600px;
        margin: auto;
    }
    .profile-header {
        text-align: center;
        margin-bottom: 20px;
    }
    .profile-header h2 {
        margin: 0;
    }
    .profile-header img {
        border-radius: 50%;
        width: 100px;
        height: 100px;
        object-fit: cover;
        margin-bottom: 10px;
    }
    .profile-info {
        line-height: 1.6;
    }
    .profile-info label {
        font-weight: bold;
    }
    .btn-primary {
        background-color: #007bff; /* Màu nền */
        color: white; /* Màu chữ */
        border: none; /* Không viền */
        padding: 10px 15px; /* Padding */
        border-radius: 5px; /* Bo góc */
        cursor: pointer; /* Con trỏ khi di chuột */
        transition: background-color 0.3s; /* Hiệu ứng chuyển tiếp */
    }
    .btn-primary:hover {
        background-color: #0056b3; /* Màu nền khi di chuột */
    }
</style>

<div class="profile-container">
    <div class="profile-header">
        <img id="avatar" src="default-avatar.png" alt="Avatar">
        <h2 id="full-name">Tên khách hàng</h2>
        <p id="role-name">Vai trò</p>
    </div>
    <div class="profile-info">
        <p><label>Họ và tên:</label> <span id="name"></span></p>
        <p><label>Số điện thoại:</label> <span id="phone"></span></p>
        <p><label>Email:</label> <span id="email"></span></p>
        <p><label>Địa chỉ:</label> <span id="address"></span> </p>
        <p><label>Ngày tạo:</label> <span id="create-at"></span>
        </p>
        <p><label>Ngày cập nhật:</label> <span id="update-at"></span></p>
        <p><label>ID vai trò:</label> <span id="role-id"></span></p>
        <p><label>Tên vai trò:</label> <span id="role"></span></p>
    </div>
    <button class="btn-primary" onclick="gotoUpdate()">Update</button>
</div>

<script>
    let userId = '@Html.ViewBag.UserId';
    async function fetchUserProfile() {
        const apiUrl = `http://localhost:7059/api/users/get-byId/${userId}`;

        try {
            const response = await fetch(apiUrl);
            const userData = await response.json();

            document.getElementById('avatar').src = userData.avatarUrl || 'https://e7.pngegg.com/pngimages/348/800/png-clipart-man-wearing-blue-shirt-illustration-computer-icons-avatar-user-login-avatar-blue-child.png';
            document.getElementById('full-name').innerText = `${userData.firstName} ${userData.lastName}`;
            document.getElementById('role-name').innerText = userData.roleName;
            document.getElementById('name').innerText = `${userData.firstName} ${userData.lastName}`;
            document.getElementById('phone').innerText = userData.phoneNumber;
            document.getElementById('email').innerText = userData.email;
            document.getElementById('address').innerText = userData.address;
            document.getElementById('create-at').innerText = userData.createAt ? new Date(userData.createAt).toLocaleDateString('vi-VN') : 'Chưa có thông tin';
            document.getElementById('update-at').innerText = new Date(userData.upDateAt).toLocaleString('vi-VN');
            document.getElementById('role-id').innerText = userData.roleId;
            document.getElementById('role').innerText = userData.roleName;
        } catch (error) {
            console.error('Lỗi khi lấy dữ liệu người dùng:', error);
        }
    }

    document.addEventListener('DOMContentLoaded', async ()=>{
       await fetchUserProfile();
    });
    function gotoUpdate(){
        window.location.href='/Customers/EditAddress';
    }
</script>
