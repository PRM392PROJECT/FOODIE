@await Html.PartialAsync("_Header_Customer")

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
    }
    .update-address-container {
        display: flex; /* Use Flexbox for layout */
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 1000px; /* Increased max-width for better layout */
        margin: auto;
    }
    .map {
        flex: 1; /* Allow the map to take up available space */
        height: 400px;
        border-radius: 8px;
        margin-right: 20px; /* Space between map and address input */
    }
    .address-info {
        flex: 0 0 300px; /* Fixed width for address input */
        margin-top: 0; /* Remove margin to align with map */
    }
    .address-info label {
        font-weight: bold;
    }
    input[type="text"] {
        width: 100%;
        padding: 10px;
        margin-top: 10px;
    }
    button {
        margin-top: 20px;
        padding: 10px 20px;
        width: 100%; /* Make the button full width */
    }
</style>

<!-- Include Leaflet CSS and JavaScript -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
    let map;
    let marker;

    function initMap(lat = 21.5, lng = 105.5) {
        map = L.map('map').setView([lat, lng], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);
        marker = L.marker([lat, lng], { draggable: true }).addTo(map);
        marker.on('dragend', function (e) {
            const { lat, lng } = e.target.getLatLng();
            getAddressFromCoordinates(lat, lng);
        });
    }

    function getAddressFromCoordinates(lat, lng) {
        const url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data && data.display_name) {
                    document.getElementById("address").value = data.display_name;
                } else {
                    document.getElementById("address").value = "Không tìm thấy địa chỉ.";
                }
            })
            .catch(() => {
                document.getElementById("address").value = "Lỗi khi tìm địa chỉ.";
            });
    }

    function getCurrentLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(position => {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                initMap(lat, lng); 
                getAddressFromCoordinates(lat, lng); 
            }, () => {
                alert("Không thể lấy vị trí của bạn.");
                initMap();
            });
        } else {
            alert("Trình duyệt của bạn không hỗ trợ Geolocation.");
            initMap(); 
        }
    }
    document.addEventListener('DOMContentLoaded', () => {
        getCurrentLocation();
    })
</script>

<div class="update-address-container">
    <div id="map" class="map"></div>
    <div class="address-info">
        <h2>Cập nhật địa chỉ</h2>
        <label for="address">Địa chỉ:</label>
        <input type="text" id="address" placeholder="Nhấp và kéo để chọn địa chỉ" readonly>
        <button onclick="updateAddress()">Cập nhật địa chỉ</button>
    </div>
</div>

<script>
    let userId = '@Html.ViewBag.UserId'; 
    function updateAddress() {
        const api = `http://localhost:7059/api/users/update-address/${userId}`;
        const address = document.getElementById("address").value;
        if (!address || address === "Không tìm thấy địa chỉ." || address === "Lỗi khi tìm địa chỉ.") {
            alert("Địa chỉ không hợp lệ. Vui lòng chọn một vị trí khác.");
            return;
        }
        fetch(api, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(address)
        })
            .then(response => {
                if (response.ok) {
                    alert("Cập nhật địa chỉ thành công!");
                    window.location.href = '/Customers/Profile';
                } else {
                    alert("Có lỗi xảy ra khi cập nhật địa chỉ.");
                }
            })
            .catch(error => {
                console.error("Lỗi:", error);
                alert("Lỗi kết nối đến máy chủ.");
            });
    }
</script>
