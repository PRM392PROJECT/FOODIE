@{
ViewData["Title"] = "Home Page";
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
    }

    .search-bar {
        display: flex;
        justify-content: center;
        padding: 15px 0;
    }

    .search-input {
        width: 100%;
        max-width: 600px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px 0 0 5px;
        outline: none;
    }

    .search-button {
        padding: 10px 15px;
        background-color: #007bff;
        border: none;
        color: white;
        border-radius: 0 5px 5px 0;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .search-button:hover {
        background-color: #0056b3;
    }

    .category-list {
        padding: 10px 0;
        overflow-x: auto;
        white-space: nowrap;
    }

    .category-item {
        display: inline-block;
        margin-right: 15px;
        padding: 10px 15px;
        background-color: #f1f1f1;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .category-item:hover {
        background-color: #e1e1e1;
    }

    .category-item.active {
        background-color: #dc3545;
        color: white;
    }

    .product-card {
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
        transition: box-shadow 0.3s;
    }

    .product-card:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .product-card img {
        max-height: 200px;
        object-fit: cover;
    }

    .btn-view-details {
        margin-top: 10px;
        background-color: #007bff;
        color: white;
    }

    .btn-view-details:hover {
        background-color: #0056b3;
    }

    .pagination {
        margin: 20px 0;
    }
</style>

@await Html.PartialAsync("_Header_Customer")

<div class="container">
    <div class="container-fluid">
        <!-- Search Bar -->
        <div class="search-bar">
            <input type="text" class="search-input" id="searchInput" placeholder="Tìm kiếm sản phẩm...">
            <button class="search-button" onclick="searchProducts()">Tìm kiếm</button>
        </div>

        <div id="category-row" class="category-list d-flex"></div>
        <div id="product-row" class="row"></div>
        <div class="pagination justify-content-center" id="pagination"></div>
    </div>
</div>

<script>
    let currentPage = 1;
    const pageSize = 4;

    document.addEventListener('DOMContentLoaded', function () {
        loadCategories();
    });

    async function loadCategories() {
        const apiUrl = 'http://localhost:7059/api/categories';
        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const categories = await response.json();
            const categoryRow = document.getElementById('category-row');

            categories.forEach(category => {
                const categoryItem = document.createElement('div');
                categoryItem.className = 'category-item';
                categoryItem.textContent = category.categoryName;
                categoryItem.addEventListener('click', () => {
                    currentPage = 1;
                    const currentActive = document.querySelector('.category-item.active');
                    if (currentActive) {
                        currentActive.classList.remove('active');
                    }
                    categoryItem.classList.add('active');
                    loadProduct(category.categoryId);
                    categoryItem.scrollIntoView({ behavior: 'smooth', inline: 'nearest' });
                });
                categoryRow.appendChild(categoryItem);
            });

            if (categories.length > 0) {
                loadProduct(categories[0].categoryId);
            }
        } catch (error) {
            console.error('There has been a problem with your fetch operation:', error);
        }
    }

    async function loadProduct(categoryId) {
        const apiUrl = `http://localhost:7059/api/products/get-page?categoryId=${categoryId}&pageNumber=${currentPage}&pageSize=${pageSize}`;
        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const page = await response.json();
            const products = page.items;
            const productRow = document.getElementById('product-row');
            const pagination = document.getElementById('pagination');

            productRow.innerHTML = '';
            pagination.innerHTML = '';

            if (products.length === 0) {
                productRow.innerHTML = '<p>Không có sản phẩm nào cho danh mục này.</p>';
                return;
            }

            products.forEach(product => {
                const productCard = `
                    <div class="col-md-3">
                        <div class="card product-card">
                            <img src="${product.images[0].imageUrl}" class="card-img-top" alt="${product.name}">
                            <div class="card-body">
                                <h5 class="card-title">${product.name}</h5>
                                <p class="card-text">Giá: ${product.price.toLocaleString('vi-VN')} VNĐ</p>
                                <a href="/Products/Detail/${product.productId}" class="btn btn-view-details">Xem Chi Tiết</a>
                            </div>
                        </div>
                    </div>
                `;
                productRow.innerHTML += productCard;
            });

            const totalPages = page.totalPages;
            for (let i = 1; i <= totalPages; i++) {
                const pageButton = document.createElement('button');
                pageButton.textContent = i;
                pageButton.className = 'btn btn-outline-primary mx-1';
                pageButton.addEventListener('click', () => {
                    currentPage = i;
                    loadProduct(categoryId);
                });
                pagination.appendChild(pageButton);
            }
        } catch (error) {
            console.error('Có vấn đề với hoạt động fetch:', error);
        }
    }

    async function searchProducts() {
        const name = document.getElementById('searchInput').value.trim();
        if (!name) {
            alert('Vui lòng nhập tên sản phẩm cần tìm.');
            return;
        }

        const apiUrl = `http://localhost:7059/api/products/search-by-name/${name}`;
        try {
            const response = await fetch(apiUrl);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json();
            const products = data.items;
            const productRow = document.getElementById('product-row');
            productRow.innerHTML = '';

            if (products.length === 0) {
                productRow.innerHTML = '<p>Không tìm thấy sản phẩm nào phù hợp.</p>';
                return;
            }

            products.forEach(product => {
                const productCard = `
                    <div class="col-md-3">
                        <div class="card product-card">
                            <img src="${product.images[0].imageUrl}" class="card-img-top" alt="${product.name}">
                            <div class="card-body">
                                <h5 class="card-title">${product.name}</h5>
                                <p class="card-text">Giá: ${product.price.toLocaleString('vi-VN')} VNĐ</p>
                                <a href="/Products/Detail/${product.productId}" class="btn btn-view-details">Xem Chi Tiết</a>
                            </div>
                        </div>
                    </div>
                `;
                productRow.innerHTML += productCard;
            });
        } catch (error) {
            console.error('Error during search operation:', error);
            document.getElementById('product-row').innerHTML = '<p>Đã xảy ra lỗi khi tìm kiếm sản phẩm.</p>';
        }
    }
</script>
