// Generated by view binder compiler. Do not edit!
package com.example.foodie.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodie.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonUpdateProfile;

  @NonNull
  public final ImageButton buttonlogout;

  @NonNull
  public final EditText editTextAddress;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextPhoneNumber;

  @NonNull
  public final ImageView imageViewAvatar;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonUpdateProfile, @NonNull ImageButton buttonlogout,
      @NonNull EditText editTextAddress, @NonNull EditText editTextEmail,
      @NonNull EditText editTextName, @NonNull EditText editTextPhoneNumber,
      @NonNull ImageView imageViewAvatar) {
    this.rootView = rootView;
    this.buttonUpdateProfile = buttonUpdateProfile;
    this.buttonlogout = buttonlogout;
    this.editTextAddress = editTextAddress;
    this.editTextEmail = editTextEmail;
    this.editTextName = editTextName;
    this.editTextPhoneNumber = editTextPhoneNumber;
    this.imageViewAvatar = imageViewAvatar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonUpdateProfile;
      Button buttonUpdateProfile = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpdateProfile == null) {
        break missingId;
      }

      id = R.id.buttonlogout;
      ImageButton buttonlogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonlogout == null) {
        break missingId;
      }

      id = R.id.editTextAddress;
      EditText editTextAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextAddress == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextPhoneNumber;
      EditText editTextPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextPhoneNumber == null) {
        break missingId;
      }

      id = R.id.imageViewAvatar;
      ImageView imageViewAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAvatar == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, buttonUpdateProfile,
          buttonlogout, editTextAddress, editTextEmail, editTextName, editTextPhoneNumber,
          imageViewAvatar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
