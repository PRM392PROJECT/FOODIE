// Generated by view binder compiler. Do not edit!
package com.example.foodie.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodie.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ConstraintLayout bottomPanel;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnPlaceOrder;

  @NonNull
  public final RecyclerView listviewOrderDetail;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final ConstraintLayout topPanel;

  @NonNull
  public final TextView totalItem;

  @NonNull
  public final TextView totalPay;

  private ActivityOrderDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull ConstraintLayout bottomPanel, @NonNull ImageButton btnBack,
      @NonNull Button btnPlaceOrder, @NonNull RecyclerView listviewOrderDetail,
      @NonNull RelativeLayout main, @NonNull ScrollView scrollView,
      @NonNull ConstraintLayout topPanel, @NonNull TextView totalItem, @NonNull TextView totalPay) {
    this.rootView = rootView;
    this.bottomPanel = bottomPanel;
    this.btnBack = btnBack;
    this.btnPlaceOrder = btnPlaceOrder;
    this.listviewOrderDetail = listviewOrderDetail;
    this.main = main;
    this.scrollView = scrollView;
    this.topPanel = topPanel;
    this.totalItem = totalItem;
    this.totalPay = totalPay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomPanel;
      ConstraintLayout bottomPanel = ViewBindings.findChildViewById(rootView, id);
      if (bottomPanel == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnPlaceOrder;
      Button btnPlaceOrder = ViewBindings.findChildViewById(rootView, id);
      if (btnPlaceOrder == null) {
        break missingId;
      }

      id = R.id.listview_order_detail;
      RecyclerView listviewOrderDetail = ViewBindings.findChildViewById(rootView, id);
      if (listviewOrderDetail == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.topPanel;
      ConstraintLayout topPanel = ViewBindings.findChildViewById(rootView, id);
      if (topPanel == null) {
        break missingId;
      }

      id = R.id.total_item;
      TextView totalItem = ViewBindings.findChildViewById(rootView, id);
      if (totalItem == null) {
        break missingId;
      }

      id = R.id.total_pay;
      TextView totalPay = ViewBindings.findChildViewById(rootView, id);
      if (totalPay == null) {
        break missingId;
      }

      return new ActivityOrderDetailBinding((RelativeLayout) rootView, bottomPanel, btnBack,
          btnPlaceOrder, listviewOrderDetail, main, scrollView, topPanel, totalItem, totalPay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
