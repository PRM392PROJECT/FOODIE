// Generated by view binder compiler. Do not edit!
package com.example.foodie.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodie.R;
import com.example.foodie.customview.NoScrollListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductDetailLayputBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button buttonAddToCart;

  @NonNull
  public final NoScrollListView listviewFeedback;

  @NonNull
  public final TextView productDescription;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productRating;

  @NonNull
  public final TextView storeName;

  private ProductDetailLayputBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton btnBack,
      @NonNull Button buttonAddToCart, @NonNull NoScrollListView listviewFeedback,
      @NonNull TextView productDescription, @NonNull TextView productName,
      @NonNull TextView productRating, @NonNull TextView storeName) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.buttonAddToCart = buttonAddToCart;
    this.listviewFeedback = listviewFeedback;
    this.productDescription = productDescription;
    this.productName = productName;
    this.productRating = productRating;
    this.storeName = storeName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductDetailLayputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductDetailLayputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_detail_layput, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductDetailLayputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.button_add_to_cart;
      Button buttonAddToCart = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddToCart == null) {
        break missingId;
      }

      id = R.id.listview_feedback;
      NoScrollListView listviewFeedback = ViewBindings.findChildViewById(rootView, id);
      if (listviewFeedback == null) {
        break missingId;
      }

      id = R.id.product_description;
      TextView productDescription = ViewBindings.findChildViewById(rootView, id);
      if (productDescription == null) {
        break missingId;
      }

      id = R.id.product_name;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.product_rating;
      TextView productRating = ViewBindings.findChildViewById(rootView, id);
      if (productRating == null) {
        break missingId;
      }

      id = R.id.store_name;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      return new ProductDetailLayputBinding((RelativeLayout) rootView, btnBack, buttonAddToCart,
          listviewFeedback, productDescription, productName, productRating, storeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
